version: '3'

services:
  dnsmasq:
    restart: unless-stopped
    image: jpillora/dnsmasq:latest
    container_name: dnsmasq
    ports:
      - 53:53/udp
    volumes:
      - ./dnsmasq/dnsmasq.conf:/etc/dnsmasq.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dnsmasq.entrypoints=http,https"
      - "traefik.http.routers.dnsmasq.rule=Host(`dnsmasq.dev.local`)"
      - "traefik.http.routers.dnsmasq.tls=true"
      - "traefik.http.services.dnsmasq.loadbalancer.server.port=8080"

  traefik:
    restart: unless-stopped
    image: traefik:v2.10
    container_name: traefik
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
      # - 8080:8080
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/certs:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/dynamic.yml:/dynamic.yml:ro
      - ./traefik/acme.json:/acme.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http,https"
      - "traefik.http.routers.traefik.rule=Host(`localhost`,`traefik.dev.local`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls=true"
      # - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      # - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      # - "traefik.http.routers.traefik-secure.entrypoints=https"
      # - "traefik.http.routers.traefik-secure.rule=Host(`traefik.dev.local`)"
      # - "traefik.http.routers.traefik-secure.tls=true"
      # - "traefik.http.routers.traefik-secure.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.traefik-secure.service=api@internal"

  whoami:
    image: containous/whoami
    # Container name must not be present to scale up
    # container_name: whoami
    security_opt:
      - no-new-privileges:true
    labels:
      # Enable this container to be mapped by traefik
      # For more information, see: https://docs.traefik.io/providers/docker/#exposedbydefault
      - "traefik.enable=true"
      # URL to reach this container
      - "traefik.http.routers.whoami.rule=Host(`whoami.dev.local`)"
      # Activation of TLS
      - "traefik.http.routers.whoami.tls=true"
      # If port is different than 80, use the following service:
      # - "traefik.http.services.<service_name>.loadbalancer.server.port=<port>"

  mailhog:
    restart: unless-stopped
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailhog.entrypoints=http,https"
      - "traefik.http.routers.mailhog.rule=Host(`mailhog.dev.local`)"
      - "traefik.http.routers.mailhog.tls=true"
      - "traefik.http.services.mailhog.loadbalancer.server.port=8025"

networks:
  default:
    external: true
    name: proxy